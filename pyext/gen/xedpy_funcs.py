#BEGIN_LEGAL
#
#Copyright (c) 2024 Intel Corporation
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#  
#END_LEGAL

# Temporary file for a partial initialization and binding
# TBD - should be autogenerated on build time

cdef_string = '''
void xed_tables_init_py(void);
void xed_state_init2_py(xed_state_t* p,
                                      xed_machine_mode_enum_t arg_mmode,
                                      xed_address_width_enum_t arg_stack_addr_width);

void xed_operand_values_set_mode_py(xed_operand_values_t* p,
                            const xed_state_t* dstate);

xed_error_enum_t xed_decode_py(xed_decoded_inst_t* xedd, 
           const xed_uint8_t* itext, 
           const unsigned int bytes);

xed_category_enum_t xed_decoded_inst_get_category_py(const xed_decoded_inst_t* p);
xed_extension_enum_t xed_decoded_inst_get_extension_py(const xed_decoded_inst_t* p);
xed_isa_set_enum_t xed_decoded_inst_get_isa_set_py(xed_decoded_inst_t const* const p);
xed_iclass_enum_t xed_decoded_inst_get_iclass_py(const xed_decoded_inst_t* p);

const char* xed_extension_enum_t2str_py(const xed_extension_enum_t p);
const char* xed_iclass_enum_t2str_py(const xed_iclass_enum_t p);
xed_iform_enum_t xed_decoded_inst_get_iform_enum_py(const xed_decoded_inst_t* p);
const char* xed_iform_enum_t2str_py(const xed_iform_enum_t p);
const char* xed_isa_set_enum_t2str_py(const xed_isa_set_enum_t p);
const char* xed_category_enum_t2str_py(const xed_category_enum_t p);

xed_bool_t xed_classify_apx_py(const xed_decoded_inst_t* d);

xed_bool_t xed_decoded_inst_dump_xed_format_py(const xed_decoded_inst_t* p,
                                 char* buf, 
                                 int buflen, 
                                 xed_uint64_t runtime_address);
void xed_init_print_info_py(xed_print_info_t* pi);
xed_bool_t xed_format_generic_py(xed_print_info_t* pi);
'''
